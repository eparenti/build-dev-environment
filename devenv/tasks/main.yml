---
    - name: Copy .bashrc file
      copy:
        src: files/bashprompt/.bashrc
        dest: "{{ ansible_env['HOME'] }}/.bashrc"
        owner: "{{ ansible_env['LOGNAME'] }}"
        group: "{{ ansible_env['LOGNAME'] }}"
        mode: '0700'

    - name: Copy bash-git-prompt files
      copy:
        src: files/bashprompt/.bash-git-prompt/
        dest: "{{ ansible_env['HOME'] }}.bash-git-prompt/"
        owner: "{{ ansible_env['LOGNAME'] }}"
        group: "{{ ansible_env['LOGNAME'] }}"
        mode: '0700'

    - name: Copy bash auto completion files
      become: True
      copy:
        src: files/bashprompt/bash_completion.d
        dest: /etc/bash_completion.d
        owner: "{{ ansible_env['LOGNAME'] }}"
        group: "{{ ansible_env['LOGNAME'] }}"
        mode: '0700'

    - name: Copy flamel container wrapper script
      copy:
        src: files/flamelc/flamel.sh
        dest: "{{ ansible_env['HOME'] }}/.local/bin/"
        owner: "{{ ansible_env['LOGNAME'] }}"
        group: "{{ ansible_env['LOGNAME'] }}"
        mode: '0664'

    - name: Copy .vimrc file
      copy:
        src: files/vim/.vimrc
        dest: "{{ ansible_env['HOME'] }}/"
        owner: "{{ ansible_env['LOGNAME'] }}"
        group: "{{ ansible_env['LOGNAME'] }}"
        mode: '0700'

    - name: Copy vim plugin files
      #synchronize:
      copy:
        src: files/vim/.vim/
        dest: "{{ ansible_env['HOME'] }}/.vim/"
        owner: "{{ ansible_env['LOGNAME'] }}"
        group: "{{ ansible_env['LOGNAME'] }}"
        mode: '0775'

    - name: Install Vundle Plugin from git
      git:
        repo: 'https://github.com/VundleVim/Vundle.vim.git'
        dest: ~/.vim/bundle/Vundle.vim

#    - name: Run PluginInstall
#      shell: vim -E -s -c "source ~/.vimrc" -c PluginInstall -c qa
#      ignore_errors: yes

    - name: Ensure podman is started
      become: True
      service:
        name: podman
        state: started
        enabled: true
#
    - name: Install curriculum dev packages
      become: True
      package:
        name: "{{ packages }}"
        state: latest